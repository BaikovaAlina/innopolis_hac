{"ast":null,"code":"var _jsxFileName = \"/home/lina/SNAKE/ranking-system-frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api/api';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Chat = ({\n  userId,\n  receiverId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await api.get(`/messages/${userId}/${receiverId}`);\n        setMessages(response.data);\n      } catch (err) {\n        setError(err.message || 'Ошибка загрузки сообщений');\n      }\n    };\n    fetchMessages();\n    socket.on('receiveMessage', data => {\n      setMessages(prev => [...prev, data]);\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [userId, receiverId]);\n  const handleSend = async () => {\n    if (!text) return;\n    try {\n      await api.post('/messages/send', {\n        sender: userId,\n        receiver: receiverId,\n        text\n      });\n      setText('');\n    } catch (err) {\n      setError(err.message || 'Ошибка отправки сообщения');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0427\\u0430\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender === userId ? 'Вы' : 'Учитель', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, msg._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"kMPovy8UAMYRta/k2cLTxsQ7dso=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","api","io","jsxDEV","_jsxDEV","socket","Chat","userId","receiverId","_s","messages","setMessages","text","setText","error","setError","fetchMessages","response","get","data","err","message","on","prev","off","handleSend","post","sender","receiver","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","msg","_id","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/lina/SNAKE/ranking-system-frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../api/api';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:5000');\n\nconst Chat = ({ userId, receiverId }) => {\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await api.get(`/messages/${userId}/${receiverId}`);\n        setMessages(response.data);\n      } catch (err) {\n        setError(err.message || 'Ошибка загрузки сообщений');\n      }\n    };\n    fetchMessages();\n\n    socket.on('receiveMessage', (data) => {\n      setMessages((prev) => [...prev, data]);\n    });\n\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [userId, receiverId]);\n\n  const handleSend = async () => {\n    if (!text) return;\n\n    try {\n      await api.post('/messages/send', { sender: userId, receiver: receiverId, text });\n      setText('');\n    } catch (err) {\n      setError(err.message || 'Ошибка отправки сообщения');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Чат</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <div>\n        {messages.map((msg) => (\n          <div key={msg._id}>\n            <strong>{msg.sender === userId ? 'Вы' : 'Учитель'}:</strong> {msg.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <button onClick={handleSend}>Отправить</button>\n    </div>\n  );\n};\n\nexport default Chat;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}